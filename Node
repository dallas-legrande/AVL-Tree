package avlTree;

/*
 * Authors: Dallas LeGrande, Selene Smith
 * TreeApp source code from (Robert Lafore. 2002. Data Structures and Algorithms in Java (2 ed.). Sams, Indianapolis, IN, USA)
 * Date: February 16, 2018
 * Overview: This version of the TreeApp program takes input from a text file and creates a tree from the data and manipulates the tree according
 * to the text file using recursion instead of iteration in the insert and delete method.
 * The app is now a self-balancing AVL tree rather than a standard BST
 */

public class Node {
    public int iData;           // data item (key)
    public double dData;        // data item
    public Node leftChild;      // this Node's left child
    public Node rightChild;     // this Node's right child
    public int frequency = 0;   // number of times this node is used
    public int height;
    
    public Node(int a, double b)
    {
        iData = a;
        dData = b;
        leftChild = null;
        rightChild = null;
        height = 1;
    }
    
    public void displayNode() { // display ourself
            System.out.print('{');
            System.out.print(iData);
            System.out.print(", ");
            System.out.print(dData);
            System.out.print("} ");		
    }
    public void increaseCount()
    {
        frequency++;
    }
}
